import { DefinitionsResolver } from "../DefinitionsResolver";
import swagger from "./mock-data/swagger.json";

describe("DefinitionsResolver", () => {
  it("should generate correct definitions", () => {
    expect(DefinitionsResolver.of((swagger as any).definitions).scanDefinitions().resolvedDefinitions).toEqual(
      expected,
    );
  });
});

const expected = {
  BookDetailVo: {
    "authorName?": "string",
    "createdDate?": "number",
    "fileName?": "string",
    "id?": "string",
    "mimeType?": "string",
    "path?": "string",
    "attachment?": "IScheduleVo",
  },
  ScheduleVO: { "team?": "string", "schedules?": "IScheduleVo[][]", "shiftId?": "string" },
  InputStream: "object",
  Resource: {
    "description?": "string",
    "file?": "IFile",
    "filename?": "string",
    "inputStream?": "IInputStream",
    "open?": "boolean",
    "readable?": "boolean",
    "uri?": "IUri",
    "url?": "IUrl",
  },
  URI: {
    "absolute?": "boolean",
    "authority?": "string",
    "fragment?": "string",
    "host?": "string",
    "opaque?": "boolean",
    "path?": "string",
    "port?": "number",
    "query?": "string",
    "rawAuthority?": "string",
    "rawFragment?": "string",
    "rawPath?": "string",
    "rawQuery?": "string",
    "rawSchemeSpecificPart?": "string",
    "rawUserInfo?": "string",
    "scheme?": "string",
    "schemeSpecificPart?": "string",
    "userInfo?": "string",
  },
  URL: {
    "authority?": "string",
    "content?": "object",
    "defaultPort?": "number",
    "deserializedFields?": "IUrlStreamHandler",
    "file?": "string",
    "host?": "string",
    "path?": "string",
    "port?": "number",
    "protocol?": "string",
    "query?": "string",
    "ref?": "string",
    "serializedHashCode?": "number",
    "userInfo?": "string",
  },
  URLStreamHandler: "object",
  UpdateBookRequest: {
    "birthCountry?": "string",
    "citizenship?": "string",
    "roleId?": "string",
    "dateOfBirth?": "number",
    "employmentStatus?": "string",
    "ethnicity?": "string",
    "gender?": "string",
    "idNumber?": "string",
    "idType?": "string",
    "spokenLanguage?": "string[]",
  },
  DocumentVO: {
    "attachment?": "IBookDetailVo",
    "authorName?": "string",
    "createdDate?": "number",
    "id?": "string",
    "note?": "string",
    "title?": "string",
  },
  AttachmentBO: {
    "authorName?": "string",
    "createdDate?": "number",
    "fileName?": "string",
    "id?": "string",
    "mimeType?": "string",
    "path?": "string",
  },
  File: {
    "absolute?": "boolean",
    "absoluteFile?": "IFile",
    "absolutePath?": "string",
    "canonicalFile?": "IFile",
    "canonicalPath?": "string",
    "directory?": "boolean",
    "executable?": "boolean",
    "file?": "boolean",
    "freeSpace?": "number",
    "hidden?": "boolean",
    "lastModified?": "number",
    "name?": "string",
    "parent?": "string",
    "parentFile?": "IFile",
    "path?": "string",
    "readable?": "boolean",
    "totalSpace?": "number",
    "usableSpace?": "number",
    "writable?": "boolean",
  },
};
